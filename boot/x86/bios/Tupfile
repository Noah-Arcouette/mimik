include_rules

ifeq (@(BOOT_X86_BIOS),y)

ifeq (@(BOOT_X86_BIOS_OFF_FLOPPY),y)
FLAGS=-DFLOPPY # boot from floppy disk
endif

ifeq (@(BOOT_X86_BIOS_OFF_HDD),y)
FLAGS=-DHDD # boot from hard disk
endif

FLAGS+=-DMAX_MAP=@(BOOT_X86_BIOS_MAX_MAP)

# set the language
ifeq (@(BOOT_X86_BIOS_LANG_EN_US_ASCII),y)
: ./lang/en_US.ascii.h |> !cp |> ./lang.h
endif

FLAGS+=-ffreestanding -fno-builtin

# build partition
ifeq (@(BOOT_X86_BIOS_PART_MBR),y)
: ./part/mbr.c | lang.h |> !cc $(FLAGS) -m16 |> ./obj/part/mbr.o {obj}
endif

# build file system
ifeq (@(BOOT_X86_BIOS_FS_TAR),y)
: ./fs/tar.c | lang.h |> !cc $(FLAGS) -m16 |> ./obj/fs/tar.o {obj}
endif

:          unreal.c       | lang.h |> !cc $(FLAGS) -m16 -DKERNEL=@(BOOT_KERNEL) |> ./obj/unreal.o {obj}
: foreach ./boot/*.S      | lang.h |> !cc $(FLAGS)                              |> ./obj/boot/%B.o {obj}
: foreach ./strap/*.S     | lang.h |> !cc $(FLAGS)                              |> ./obj/strap/%B.o {obj}
: foreach ./*.c ^unreal.c | lang.h |> !cc $(FLAGS) -m16                         |> ./obj/%B.o {obj}
: {obj}                            |> !ld -Tbios.ld                             |> bios.elf

: bios.elf |> !objcopy -O binary --only-section=.boot   |> $(DIST)/boot/boot-sector.bin
: bios.elf |> !objcopy -O binary --remove-section=.boot |> $(DIST)/boot/mbr-break.bin

ifeq (@(BOOT_X86_BIOS_ELF),y)
: bios.elf |> !cp |> $(DIST)/boot/bios.elf
endif

endif
